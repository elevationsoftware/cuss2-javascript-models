/*
 * Common Use Self Service V2 API Definition (current working version)
 * <h3>Definition of the new CUSS2 API.</h3><p>This API definition describes IATA Common Use Self Service (IATA RP 1706c), a standard that allows multiple airlines or entities to share physical kiosks or other hardware devices to offer self-services to their passengers. These services include, but are not limited to passenger check-in functionality and self-service baggage drop off. The standard also defines how airlines and other application suppliers can develop CUSS-compliant applications that are able to run on any device whose platform is CUSS-compliant.<p>In its official release the API definition is accompanied by the CUSS Specification (CUSS-TS), describing in human readable form (textual and graphical) the concepts, requirements, interaction, workflows and behavior for both CUSS platforms and CUSS applications, and the CUSS Implementation Guide (CUSS-IG) describing best practices and giving examples on how to implement CUSS compliant platforms- and applications.<p>The API requires and includes further schema definitions/domains as listed below<p>- CUSS2 Basic Schemas<br>- CUSS2 Self Bag Drop<br>- CUSS2 Biometrics<br>- CUSS2 Payments<br>- CUSS2 Illumination<p>The IATA Common Use Group (CUG) and the CUSS Technical Solution Group (CUSS-TSG) maintain this API.<p>For bug reports, design issues and/or any other feedback send your e-mail to:<p><a href=\"mailto:c6bb2228.iataonline.onmicrosoft.com@emea.teams.ms\">**CUSS-TSG @ IATA**</a><p>-----------<p>**General and important note on handling timeouts:**<p>In contrast to earlier CUSS versions applications are now responsible for tracking and handling the time and timeouts for any directive that may require longer execution. Applications shall use the cancel() directive to terminate a too long pending call.<p>----------<p>&copy; International Air Transport Association (IATA) 2021. - All rights reserved.<p>THIS API DEFINITION AND ALL RELATED DOMAINS ARE PROVIDED ON AN \"AS IS\" AND \"AS AVAILABLE\" BASIS, WITHOUT WARRANTY OF ANY KIND.<p>TO THE FULLEST EXTENT PERMITTED BY APPLICABLE LAW, IATA DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND WARRANTIES OF FITNESS FOR A PARTICULAR PURPOSE, QUALITY, PERFORMANCE, ACCURACY, COMPLETENESS AND NON-INFRINGEMENT OF THIRD PARTY RIGHTS.<p>TO THE FULLEST EXTENT PERMITTED BY APPLICABLE LAW, IATA SHALL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, CONSEQUENTIAL, PUNITIVE, OR EXEMPLARY DAMAGES, INCLUDING BUT NOT LIMITED TO, DAMAGES FOR LOSS OF PROFITS, REVENUE, GOODWILL, BUSINESS INTERRUPTION, LOSS OF BUSINESS INFORMATION OR ANY OTHER PECUNIARY LOSS (EVEN IF LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES), HOWEVER CAUSED, AND REGARDLESS OF THE THEORY OF LIABILITY, ARISING OUT OF, OR RELATED TO, THIS LICENSE OR THE SPECIFICATIONS, INCLUDING THE USE OR PERFORMANCE OF THE SPECIFICATIONS AND OF ANY PRODUCTS OR SERVICES IMPLEMENTING, IN WHOLE OR IN PART, THE SPECIFICATIONS.<p>THE IATA PSC DATA EXCHANGE SPECIFICATIONS LICENSE TERMS APPLY TO ANY USE OF THIS API AND RELATED DOMAINS.<p>----------- 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from './ApiClient.js';
import {APIAcknowledgement} from './model/APIAcknowledgement.js';
import {AckCodes} from './model/AckCodes.js';
import {AgreementTextType} from './model/AgreementTextType.js';
import {AlibiType} from './model/AlibiType.js';
import {AmountType} from './model/AmountType.js';
import {ApplicationActivation} from './model/ApplicationActivation.js';
import {ApplicationData} from './model/ApplicationData.js';
import {ApplicationDataMeta} from './model/ApplicationDataMeta.js';
import {ApplicationDataPayload} from './model/ApplicationDataPayload.js';
import {ApplicationID} from './model/ApplicationID.js';
import {ApplicationState} from './model/ApplicationState.js';
import {ApplicationStateChangeReasonCodes} from './model/ApplicationStateChangeReasonCodes.js';
import {ApplicationStateCodes} from './model/ApplicationStateCodes.js';
import {ApplicationTransfer} from './model/ApplicationTransfer.js';
import {ApprovalCode} from './model/ApprovalCode.js';
import {AssociationDataItemType} from './model/AssociationDataItemType.js';
import {AuthorizationAmounts} from './model/AuthorizationAmounts.js';
import {BaggageData} from './model/BaggageData.js';
import {BaggageDataBaggageMeasurements} from './model/BaggageDataBaggageMeasurements.js';
import {BaggageDataBarcodeTagList} from './model/BaggageDataBarcodeTagList.js';
import {BaggageDataRfidTagList} from './model/BaggageDataRfidTagList.js';
import {BarcodeTagDataType} from './model/BarcodeTagDataType.js';
import {BiometricAnyType} from './model/BiometricAnyType.js';
import {BiometricProviderMessage} from './model/BiometricProviderMessage.js';
import {BiometricProviderMessageBiometricRequest} from './model/BiometricProviderMessageBiometricRequest.js';
import {BiometricProviderMessageBiometricRequestAgreementsList} from './model/BiometricProviderMessageBiometricRequestAgreementsList.js';
import {BiometricProviderMessageBiometricRequestData} from './model/BiometricProviderMessageBiometricRequestData.js';
import {BiometricProviderMessageBiometricRequestDataProcessing} from './model/BiometricProviderMessageBiometricRequestDataProcessing.js';
import {BiometricProviderMessageBiometricRequestEnvironment} from './model/BiometricProviderMessageBiometricRequestEnvironment.js';
import {BiometricProviderMessageBiometricResponse} from './model/BiometricProviderMessageBiometricResponse.js';
import {BiometricProviderMessageBiometricResponseFailureReason} from './model/BiometricProviderMessageBiometricResponseFailureReason.js';
import {BiometricProviderMessageType} from './model/BiometricProviderMessageType.js';
import {BlinkingRateType} from './model/BlinkingRateType.js';
import {CUSSDataTypes} from './model/CUSSDataTypes.js';
import {CardBrand} from './model/CardBrand.js';
import {CardBrandList} from './model/CardBrandList.js';
import {CardTrackType} from './model/CardTrackType.js';
import {CharacteristicsDocumentType} from './model/CharacteristicsDocumentType.js';
import {CommonUseBiometricMessage} from './model/CommonUseBiometricMessage.js';
import {CommonUseBiometricMessageCharacteristics} from './model/CommonUseBiometricMessageCharacteristics.js';
import {CommonUseBiometricMessageCharacteristicsCharacteristicsResponse} from './model/CommonUseBiometricMessageCharacteristicsCharacteristicsResponse.js';
import {CommonUsePaymentMessage} from './model/CommonUsePaymentMessage.js';
import {CommonUsePaymentMessageCharacteristics} from './model/CommonUsePaymentMessageCharacteristics.js';
import {CommonUsePaymentMessageCharacteristicsCharacteristicsResponse} from './model/CommonUsePaymentMessageCharacteristicsCharacteristicsResponse.js';
import {CommonUsePaymentMessageCharacteristicsCharacteristicsResponseEPayment} from './model/CommonUsePaymentMessageCharacteristicsCharacteristicsResponseEPayment.js';
import {CommonUsePaymentMessageErrorResponse} from './model/CommonUsePaymentMessageErrorResponse.js';
import {ComponentCharacteristics} from './model/ComponentCharacteristics.js';
import {ComponentCharacteristicsConveyorSBD} from './model/ComponentCharacteristicsConveyorSBD.js';
import {ComponentCharacteristicsDeviceHelpInstruction} from './model/ComponentCharacteristicsDeviceHelpInstruction.js';
import {ComponentCharacteristicsDisplayType} from './model/ComponentCharacteristicsDisplayType.js';
import {ComponentCharacteristicsDocumentBin} from './model/ComponentCharacteristicsDocumentBin.js';
import {ComponentCharacteristicsNavigationType} from './model/ComponentCharacteristicsNavigationType.js';
import {ComponentID} from './model/ComponentID.js';
import {ComponentList} from './model/ComponentList.js';
import {ComponentState} from './model/ComponentState.js';
import {ComponentTypes} from './model/ComponentTypes.js';
import {CurrencyCode} from './model/CurrencyCode.js';
import {CurrencyCodeList} from './model/CurrencyCodeList.js';
import {DataRecord} from './model/DataRecord.js';
import {DataRecordList} from './model/DataRecordList.js';
import {DataStatus} from './model/DataStatus.js';
import {DeviceHelpInstructionType} from './model/DeviceHelpInstructionType.js';
import {DeviceTypes} from './model/DeviceTypes.js';
import {DimensionType} from './model/DimensionType.js';
import {DsTypesEpayment} from './model/DsTypesEpayment.js';
import {EPaymentMessage} from './model/EPaymentMessage.js';
import {EPaymentMessageOperation} from './model/EPaymentMessageOperation.js';
import {EPaymentMessageSetup} from './model/EPaymentMessageSetup.js';
import {EPaymentMessageTransaction} from './model/EPaymentMessageTransaction.js';
import {EPaymentMessageTransactionTransactionAcknowledge} from './model/EPaymentMessageTransactionTransactionAcknowledge.js';
import {EPaymentMessageTransactionTransactionRequest} from './model/EPaymentMessageTransactionTransactionRequest.js';
import {EPaymentMessageTransactionTransactionRequestAccount} from './model/EPaymentMessageTransactionTransactionRequestAccount.js';
import {EPaymentMessageTransactionTransactionRequestAccountManual} from './model/EPaymentMessageTransactionTransactionRequestAccountManual.js';
import {EPaymentMessageTransactionTransactionRequestAccountSwipe} from './model/EPaymentMessageTransactionTransactionRequestAccountSwipe.js';
import {EPaymentMessageTransactionTransactionRequestEnvironment} from './model/EPaymentMessageTransactionTransactionRequestEnvironment.js';
import {EPaymentMessageTransactionTransactionRequestItinerary} from './model/EPaymentMessageTransactionTransactionRequestItinerary.js';
import {EPaymentMessageTransactionTransactionRequestPreAuth} from './model/EPaymentMessageTransactionTransactionRequestPreAuth.js';
import {EPaymentMessageTransactionTransactionResponse} from './model/EPaymentMessageTransactionTransactionResponse.js';
import {EPaymentMessageTransactionTransactionResponseApproval} from './model/EPaymentMessageTransactionTransactionResponseApproval.js';
import {EPaymentMessageTransactionTransactionResponseNonApproval} from './model/EPaymentMessageTransactionTransactionResponseNonApproval.js';
import {EnvironmentComponent} from './model/EnvironmentComponent.js';
import {EnvironmentLevel} from './model/EnvironmentLevel.js';
import {EventCategories} from './model/EventCategories.js';
import {EventModes} from './model/EventModes.js';
import {EventTypes} from './model/EventTypes.js';
import {ExtendedWeightType} from './model/ExtendedWeightType.js';
import {Feature} from './model/Feature.js';
import {FeatureList} from './model/FeatureList.js';
import {GPDataItemType} from './model/GPDataItemType.js';
import {GPDataListType} from './model/GPDataListType.js';
import {GPParameter} from './model/GPParameter.js';
import {GPParameterList} from './model/GPParameterList.js';
import {IlluminationData} from './model/IlluminationData.js';
import {IlluminationDataLightColor} from './model/IlluminationDataLightColor.js';
import {Location} from './model/Location.js';
import {MRZTrackType} from './model/MRZTrackType.js';
import {MediaType} from './model/MediaType.js';
import {MediaTypeList} from './model/MediaTypeList.js';
import {MediaTypes} from './model/MediaTypes.js';
import {MerchantID} from './model/MerchantID.js';
import {NavigationTypes} from './model/NavigationTypes.js';
import {OperationDocumentType} from './model/OperationDocumentType.js';
import {PassengerBiometricsType} from './model/PassengerBiometricsType.js';
import {PassengerDataType} from './model/PassengerDataType.js';
import {PassengerDataTypeAssociationDataList} from './model/PassengerDataTypeAssociationDataList.js';
import {PassengerDataTypePassengerBiometricsData} from './model/PassengerDataTypePassengerBiometricsData.js';
import {PassengerDataTypePassengerMRZData} from './model/PassengerDataTypePassengerMRZData.js';
import {PassengerIDType} from './model/PassengerIDType.js';
import {PassengerSessionID} from './model/PassengerSessionID.js';
import {PlatformData} from './model/PlatformData.js';
import {PlatformDataMeta} from './model/PlatformDataMeta.js';
import {PlatformDataMetaEventClassification} from './model/PlatformDataMetaEventClassification.js';
import {PlatformDataPayload} from './model/PlatformDataPayload.js';
import {PlatformDirectives} from './model/PlatformDirectives.js';
import {RFIDElement} from './model/RFIDElement.js';
import {RFIDTagDataType} from './model/RFIDTagDataType.js';
import {ReceiptData} from './model/ReceiptData.js';
import {RequestID} from './model/RequestID.js';
import {RgbType} from './model/RgbType.js';
import {ScreenResolution} from './model/ScreenResolution.js';
import {MessageCodes} from './model/MessageCodes.js';
import {TransactionDocumentType} from './model/TransactionDocumentType.js';
import {TransactionReference} from './model/TransactionReference.js';
import {TransactionStatus} from './model/TransactionStatus.js';
import {WeightType} from './model/WeightType.js';
import {CodeStubsGenerationApi} from './api/CodeStubsGenerationApi.js';
import {PlatformCommunicationApi} from './api/PlatformCommunicationApi.js';

/**
* h3Definition_of_the_new_CUSS2_API_h3pThis_API_definition_describes_IATA_Common_Use_Self_Service__IATA_RP_1706c_a_standard_that_allows_multiple_airlines_or_entities_to_share_physical_kiosks_or_other_hardware_devices_to_offer_self_services_to_their_passengers__These_services_include_but_are_not_limited_to_passenger_check_in_functionality_and_self_service_baggage_drop_off__The_standard_also_defines_how_airlines_and_other_application_suppliers_can_develop_CUSS_compliant_applications_that_are_able_to_run_on_any_device_whose_platform_is_CUSS_compliant_pIn_its_official_release_the_API_definition_is_accompanied_by_the_CUSS_Specification__CUSS_TS_describing_in_human_readable_form__textual_and_graphical_the_concepts_requirements_interaction_workflows_and_behavior_for_both_CUSS_platforms_and_CUSS_applications_and_the_CUSS_Implementation_Guide__CUSS_IG_describing_best_practices_and_giving_examples_on_how_to_implement_CUSS_compliant_platforms__and_applications_pThe_API_requires_and_includes_further_schema_definitionsdomains_as_listed_belowp__CUSS2_Basic_Schemasbr__CUSS2_Self_Bag_Dropbr__CUSS2_Biometricsbr__CUSS2_Paymentsbr__CUSS2_IlluminationpThe_IATA_Common_Use_Group__CUG_and_the_CUSS_Technical_Solution_Group__CUSS_TSG_maintain_this_API_pFor_bug_reports_design_issues_andor_any_other_feedback_send_your_e_mail_topa_hrefmailtoc6bb2228_iataonline_onmicrosoft_comemea_teams_msCUSS_TSG__IATAap___________pGeneral_and_important_note_on_handling_timeoutspIn_contrast_to_earlier_CUSS_versions_applications_are_now_responsible_for_tracking_and_handling_the_time_and_timeouts_for_any_directive_that_may_require_longer_execution__Applications_shall_use_the_cancel__directive_to_terminate_a_too_long_pending_call_p__________pcopy_International_Air_Transport_Association__IATA_2021____All_rights_reserved_pTHIS_API_DEFINITION_AND_ALL_RELATED_DOMAINS_ARE_PROVIDED_ON_AN_AS_IS_AND_AS_AVAILABLE_BASIS_WITHOUT_WARRANTY_OF_ANY_KIND_pTO_THE_FULLEST_EXTENT_PERMITTED_BY_APPLICABLE_LAW_IATA_DISCLAIMS_ALL_WARRANTIES_EXPRESS_OR_IMPLIED_INCLUDING_BUT_NOT_LIMITED_TO_IMPLIED_WARRANTIES_OF_MERCHANTABILITY_AND_WARRANTIES_OF_FITNESS_FOR_A_PARTICULAR_PURPOSE_QUALITY_PERFORMANCE_ACCURACY_COMPLETENESS_AND_NON_INFRINGEMENT_OF_THIRD_PARTY_RIGHTS_pTO_THE_FULLEST_EXTENT_PERMITTED_BY_APPLICABLE_LAW_IATA_SHALL_NOT_BE_LIABLE_FOR_ANY_DIRECT_INDIRECT_INCIDENTAL_SPECIAL_CONSEQUENTIAL_PUNITIVE_OR_EXEMPLARY_DAMAGES_INCLUDING_BUT_NOT_LIMITED_TO_DAMAGES_FOR_LOSS_OF_PROFITS_REVENUE_GOODWILL_BUSINESS_INTERRUPTION_LOSS_OF_BUSINESS_INFORMATION_OR_ANY_OTHER_PECUNIARY_LOSS__EVEN_IF_LICENSOR_HAS_BEEN_ADVISED_OF_THE_POSSIBILITY_OF_SUCH_DAMAGES_HOWEVER_CAUSED_AND_REGARDLESS_OF_THE_THEORY_OF_LIABILITY_ARISING_OUT_OF_OR_RELATED_TO_THIS_LICENSE_OR_THE_SPECIFICATIONS_INCLUDING_THE_USE_OR_PERFORMANCE_OF_THE_SPECIFICATIONS_AND_OF_ANY_PRODUCTS_OR_SERVICES_IMPLEMENTING_IN_WHOLE_OR_IN_PART_THE_SPECIFICATIONS_pTHE_IATA_PSC_DATA_EXCHANGE_SPECIFICATIONS_LICENSE_TERMS_APPLY_TO_ANY_USE_OF_THIS_API_AND_RELATED_DOMAINS_p___________.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CommonUseSelfServiceV2ApiDefinitionCurrentWorkingVersion = require('index'); // See note below*.
* var xxxSvc = new CommonUseSelfServiceV2ApiDefinitionCurrentWorkingVersion.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CommonUseSelfServiceV2ApiDefinitionCurrentWorkingVersion.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CommonUseSelfServiceV2ApiDefinitionCurrentWorkingVersion.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CommonUseSelfServiceV2ApiDefinitionCurrentWorkingVersion.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The APIAcknowledgement model constructor.
     * @property {module:model/APIAcknowledgement}
     */
    APIAcknowledgement,

    /**
     * The AckCodes model constructor.
     * @property {module:model/AckCodes}
     */
    AckCodes,

    /**
     * The AgreementTextType model constructor.
     * @property {module:model/AgreementTextType}
     */
    AgreementTextType,

    /**
     * The AlibiType model constructor.
     * @property {module:model/AlibiType}
     */
    AlibiType,

    /**
     * The AmountType model constructor.
     * @property {module:model/AmountType}
     */
    AmountType,

    /**
     * The ApplicationActivation model constructor.
     * @property {module:model/ApplicationActivation}
     */
    ApplicationActivation,

    /**
     * The ApplicationData model constructor.
     * @property {module:model/ApplicationData}
     */
    ApplicationData,

    /**
     * The ApplicationDataMeta model constructor.
     * @property {module:model/ApplicationDataMeta}
     */
    ApplicationDataMeta,

    /**
     * The ApplicationDataPayload model constructor.
     * @property {module:model/ApplicationDataPayload}
     */
    ApplicationDataPayload,

    /**
     * The ApplicationID model constructor.
     * @property {module:model/ApplicationID}
     */
    ApplicationID,

    /**
     * The ApplicationState model constructor.
     * @property {module:model/ApplicationState}
     */
    ApplicationState,

    /**
     * The ApplicationStateChangeReasonCodes model constructor.
     * @property {module:model/ApplicationStateChangeReasonCodes}
     */
    ApplicationStateChangeReasonCodes,

    /**
     * The ApplicationStateCodes model constructor.
     * @property {module:model/ApplicationStateCodes}
     */
    ApplicationStateCodes,

    /**
     * The ApplicationTransfer model constructor.
     * @property {module:model/ApplicationTransfer}
     */
    ApplicationTransfer,

    /**
     * The ApprovalCode model constructor.
     * @property {module:model/ApprovalCode}
     */
    ApprovalCode,

    /**
     * The AssociationDataItemType model constructor.
     * @property {module:model/AssociationDataItemType}
     */
    AssociationDataItemType,

    /**
     * The AuthorizationAmounts model constructor.
     * @property {module:model/AuthorizationAmounts}
     */
    AuthorizationAmounts,

    /**
     * The BaggageData model constructor.
     * @property {module:model/BaggageData}
     */
    BaggageData,

    /**
     * The BaggageDataBaggageMeasurements model constructor.
     * @property {module:model/BaggageDataBaggageMeasurements}
     */
    BaggageDataBaggageMeasurements,

    /**
     * The BaggageDataBarcodeTagList model constructor.
     * @property {module:model/BaggageDataBarcodeTagList}
     */
    BaggageDataBarcodeTagList,

    /**
     * The BaggageDataRfidTagList model constructor.
     * @property {module:model/BaggageDataRfidTagList}
     */
    BaggageDataRfidTagList,

    /**
     * The BarcodeTagDataType model constructor.
     * @property {module:model/BarcodeTagDataType}
     */
    BarcodeTagDataType,

    /**
     * The BiometricAnyType model constructor.
     * @property {module:model/BiometricAnyType}
     */
    BiometricAnyType,

    /**
     * The BiometricProviderMessage model constructor.
     * @property {module:model/BiometricProviderMessage}
     */
    BiometricProviderMessage,

    /**
     * The BiometricProviderMessageBiometricRequest model constructor.
     * @property {module:model/BiometricProviderMessageBiometricRequest}
     */
    BiometricProviderMessageBiometricRequest,

    /**
     * The BiometricProviderMessageBiometricRequestAgreementsList model constructor.
     * @property {module:model/BiometricProviderMessageBiometricRequestAgreementsList}
     */
    BiometricProviderMessageBiometricRequestAgreementsList,

    /**
     * The BiometricProviderMessageBiometricRequestData model constructor.
     * @property {module:model/BiometricProviderMessageBiometricRequestData}
     */
    BiometricProviderMessageBiometricRequestData,

    /**
     * The BiometricProviderMessageBiometricRequestDataProcessing model constructor.
     * @property {module:model/BiometricProviderMessageBiometricRequestDataProcessing}
     */
    BiometricProviderMessageBiometricRequestDataProcessing,

    /**
     * The BiometricProviderMessageBiometricRequestEnvironment model constructor.
     * @property {module:model/BiometricProviderMessageBiometricRequestEnvironment}
     */
    BiometricProviderMessageBiometricRequestEnvironment,

    /**
     * The BiometricProviderMessageBiometricResponse model constructor.
     * @property {module:model/BiometricProviderMessageBiometricResponse}
     */
    BiometricProviderMessageBiometricResponse,

    /**
     * The BiometricProviderMessageBiometricResponseFailureReason model constructor.
     * @property {module:model/BiometricProviderMessageBiometricResponseFailureReason}
     */
    BiometricProviderMessageBiometricResponseFailureReason,

    /**
     * The BiometricProviderMessageType model constructor.
     * @property {module:model/BiometricProviderMessageType}
     */
    BiometricProviderMessageType,

    /**
     * The BlinkingRateType model constructor.
     * @property {module:model/BlinkingRateType}
     */
    BlinkingRateType,

    /**
     * The CUSSDataTypes model constructor.
     * @property {module:model/CUSSDataTypes}
     */
    CUSSDataTypes,

    /**
     * The CardBrand model constructor.
     * @property {module:model/CardBrand}
     */
    CardBrand,

    /**
     * The CardBrandList model constructor.
     * @property {module:model/CardBrandList}
     */
    CardBrandList,

    /**
     * The CardTrackType model constructor.
     * @property {module:model/CardTrackType}
     */
    CardTrackType,

    /**
     * The CharacteristicsDocumentType model constructor.
     * @property {module:model/CharacteristicsDocumentType}
     */
    CharacteristicsDocumentType,

    /**
     * The CommonUseBiometricMessage model constructor.
     * @property {module:model/CommonUseBiometricMessage}
     */
    CommonUseBiometricMessage,

    /**
     * The CommonUseBiometricMessageCharacteristics model constructor.
     * @property {module:model/CommonUseBiometricMessageCharacteristics}
     */
    CommonUseBiometricMessageCharacteristics,

    /**
     * The CommonUseBiometricMessageCharacteristicsCharacteristicsResponse model constructor.
     * @property {module:model/CommonUseBiometricMessageCharacteristicsCharacteristicsResponse}
     */
    CommonUseBiometricMessageCharacteristicsCharacteristicsResponse,

    /**
     * The CommonUsePaymentMessage model constructor.
     * @property {module:model/CommonUsePaymentMessage}
     */
    CommonUsePaymentMessage,

    /**
     * The CommonUsePaymentMessageCharacteristics model constructor.
     * @property {module:model/CommonUsePaymentMessageCharacteristics}
     */
    CommonUsePaymentMessageCharacteristics,

    /**
     * The CommonUsePaymentMessageCharacteristicsCharacteristicsResponse model constructor.
     * @property {module:model/CommonUsePaymentMessageCharacteristicsCharacteristicsResponse}
     */
    CommonUsePaymentMessageCharacteristicsCharacteristicsResponse,

    /**
     * The CommonUsePaymentMessageCharacteristicsCharacteristicsResponseEPayment model constructor.
     * @property {module:model/CommonUsePaymentMessageCharacteristicsCharacteristicsResponseEPayment}
     */
    CommonUsePaymentMessageCharacteristicsCharacteristicsResponseEPayment,

    /**
     * The CommonUsePaymentMessageErrorResponse model constructor.
     * @property {module:model/CommonUsePaymentMessageErrorResponse}
     */
    CommonUsePaymentMessageErrorResponse,

    /**
     * The ComponentCharacteristics model constructor.
     * @property {module:model/ComponentCharacteristics}
     */
    ComponentCharacteristics,

    /**
     * The ComponentCharacteristicsConveyorSBD model constructor.
     * @property {module:model/ComponentCharacteristicsConveyorSBD}
     */
    ComponentCharacteristicsConveyorSBD,

    /**
     * The ComponentCharacteristicsDeviceHelpInstruction model constructor.
     * @property {module:model/ComponentCharacteristicsDeviceHelpInstruction}
     */
    ComponentCharacteristicsDeviceHelpInstruction,

    /**
     * The ComponentCharacteristicsDisplayType model constructor.
     * @property {module:model/ComponentCharacteristicsDisplayType}
     */
    ComponentCharacteristicsDisplayType,

    /**
     * The ComponentCharacteristicsDocumentBin model constructor.
     * @property {module:model/ComponentCharacteristicsDocumentBin}
     */
    ComponentCharacteristicsDocumentBin,

    /**
     * The ComponentCharacteristicsNavigationType model constructor.
     * @property {module:model/ComponentCharacteristicsNavigationType}
     */
    ComponentCharacteristicsNavigationType,

    /**
     * The ComponentID model constructor.
     * @property {module:model/ComponentID}
     */
    ComponentID,

    /**
     * The ComponentList model constructor.
     * @property {module:model/ComponentList}
     */
    ComponentList,

    /**
     * The ComponentState model constructor.
     * @property {module:model/ComponentState}
     */
    ComponentState,

    /**
     * The ComponentTypes model constructor.
     * @property {module:model/ComponentTypes}
     */
    ComponentTypes,

    /**
     * The CurrencyCode model constructor.
     * @property {module:model/CurrencyCode}
     */
    CurrencyCode,

    /**
     * The CurrencyCodeList model constructor.
     * @property {module:model/CurrencyCodeList}
     */
    CurrencyCodeList,

    /**
     * The DataRecord model constructor.
     * @property {module:model/DataRecord}
     */
    DataRecord,

    /**
     * The DataRecordList model constructor.
     * @property {module:model/DataRecordList}
     */
    DataRecordList,

    /**
     * The DataStatus model constructor.
     * @property {module:model/DataStatus}
     */
    DataStatus,

    /**
     * The DeviceHelpInstructionType model constructor.
     * @property {module:model/DeviceHelpInstructionType}
     */
    DeviceHelpInstructionType,

    /**
     * The DeviceTypes model constructor.
     * @property {module:model/DeviceTypes}
     */
    DeviceTypes,

    /**
     * The DimensionType model constructor.
     * @property {module:model/DimensionType}
     */
    DimensionType,

    /**
     * The DsTypesEpayment model constructor.
     * @property {module:model/DsTypesEpayment}
     */
    DsTypesEpayment,

    /**
     * The EPaymentMessage model constructor.
     * @property {module:model/EPaymentMessage}
     */
    EPaymentMessage,

    /**
     * The EPaymentMessageOperation model constructor.
     * @property {module:model/EPaymentMessageOperation}
     */
    EPaymentMessageOperation,

    /**
     * The EPaymentMessageSetup model constructor.
     * @property {module:model/EPaymentMessageSetup}
     */
    EPaymentMessageSetup,

    /**
     * The EPaymentMessageTransaction model constructor.
     * @property {module:model/EPaymentMessageTransaction}
     */
    EPaymentMessageTransaction,

    /**
     * The EPaymentMessageTransactionTransactionAcknowledge model constructor.
     * @property {module:model/EPaymentMessageTransactionTransactionAcknowledge}
     */
    EPaymentMessageTransactionTransactionAcknowledge,

    /**
     * The EPaymentMessageTransactionTransactionRequest model constructor.
     * @property {module:model/EPaymentMessageTransactionTransactionRequest}
     */
    EPaymentMessageTransactionTransactionRequest,

    /**
     * The EPaymentMessageTransactionTransactionRequestAccount model constructor.
     * @property {module:model/EPaymentMessageTransactionTransactionRequestAccount}
     */
    EPaymentMessageTransactionTransactionRequestAccount,

    /**
     * The EPaymentMessageTransactionTransactionRequestAccountManual model constructor.
     * @property {module:model/EPaymentMessageTransactionTransactionRequestAccountManual}
     */
    EPaymentMessageTransactionTransactionRequestAccountManual,

    /**
     * The EPaymentMessageTransactionTransactionRequestAccountSwipe model constructor.
     * @property {module:model/EPaymentMessageTransactionTransactionRequestAccountSwipe}
     */
    EPaymentMessageTransactionTransactionRequestAccountSwipe,

    /**
     * The EPaymentMessageTransactionTransactionRequestEnvironment model constructor.
     * @property {module:model/EPaymentMessageTransactionTransactionRequestEnvironment}
     */
    EPaymentMessageTransactionTransactionRequestEnvironment,

    /**
     * The EPaymentMessageTransactionTransactionRequestItinerary model constructor.
     * @property {module:model/EPaymentMessageTransactionTransactionRequestItinerary}
     */
    EPaymentMessageTransactionTransactionRequestItinerary,

    /**
     * The EPaymentMessageTransactionTransactionRequestPreAuth model constructor.
     * @property {module:model/EPaymentMessageTransactionTransactionRequestPreAuth}
     */
    EPaymentMessageTransactionTransactionRequestPreAuth,

    /**
     * The EPaymentMessageTransactionTransactionResponse model constructor.
     * @property {module:model/EPaymentMessageTransactionTransactionResponse}
     */
    EPaymentMessageTransactionTransactionResponse,

    /**
     * The EPaymentMessageTransactionTransactionResponseApproval model constructor.
     * @property {module:model/EPaymentMessageTransactionTransactionResponseApproval}
     */
    EPaymentMessageTransactionTransactionResponseApproval,

    /**
     * The EPaymentMessageTransactionTransactionResponseNonApproval model constructor.
     * @property {module:model/EPaymentMessageTransactionTransactionResponseNonApproval}
     */
    EPaymentMessageTransactionTransactionResponseNonApproval,

    /**
     * The EnvironmentComponent model constructor.
     * @property {module:model/EnvironmentComponent}
     */
    EnvironmentComponent,

    /**
     * The EnvironmentLevel model constructor.
     * @property {module:model/EnvironmentLevel}
     */
    EnvironmentLevel,

    /**
     * The EventCategories model constructor.
     * @property {module:model/EventCategories}
     */
    EventCategories,

    /**
     * The EventModes model constructor.
     * @property {module:model/EventModes}
     */
    EventModes,

    /**
     * The EventTypes model constructor.
     * @property {module:model/EventTypes}
     */
    EventTypes,

    /**
     * The ExtendedWeightType model constructor.
     * @property {module:model/ExtendedWeightType}
     */
    ExtendedWeightType,

    /**
     * The Feature model constructor.
     * @property {module:model/Feature}
     */
    Feature,

    /**
     * The FeatureList model constructor.
     * @property {module:model/FeatureList}
     */
    FeatureList,

    /**
     * The GPDataItemType model constructor.
     * @property {module:model/GPDataItemType}
     */
    GPDataItemType,

    /**
     * The GPDataListType model constructor.
     * @property {module:model/GPDataListType}
     */
    GPDataListType,

    /**
     * The GPParameter model constructor.
     * @property {module:model/GPParameter}
     */
    GPParameter,

    /**
     * The GPParameterList model constructor.
     * @property {module:model/GPParameterList}
     */
    GPParameterList,

    /**
     * The IlluminationData model constructor.
     * @property {module:model/IlluminationData}
     */
    IlluminationData,

    /**
     * The IlluminationDataLightColor model constructor.
     * @property {module:model/IlluminationDataLightColor}
     */
    IlluminationDataLightColor,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The MRZTrackType model constructor.
     * @property {module:model/MRZTrackType}
     */
    MRZTrackType,

    /**
     * The MediaType model constructor.
     * @property {module:model/MediaType}
     */
    MediaType,

    /**
     * The MediaTypeList model constructor.
     * @property {module:model/MediaTypeList}
     */
    MediaTypeList,

    /**
     * The MediaTypes model constructor.
     * @property {module:model/MediaTypes}
     */
    MediaTypes,

    /**
     * The MerchantID model constructor.
     * @property {module:model/MerchantID}
     */
    MerchantID,

    /**
     * The NavigationTypes model constructor.
     * @property {module:model/NavigationTypes}
     */
    NavigationTypes,

    /**
     * The OperationDocumentType model constructor.
     * @property {module:model/OperationDocumentType}
     */
    OperationDocumentType,

    /**
     * The PassengerBiometricsType model constructor.
     * @property {module:model/PassengerBiometricsType}
     */
    PassengerBiometricsType,

    /**
     * The PassengerDataType model constructor.
     * @property {module:model/PassengerDataType}
     */
    PassengerDataType,

    /**
     * The PassengerDataTypeAssociationDataList model constructor.
     * @property {module:model/PassengerDataTypeAssociationDataList}
     */
    PassengerDataTypeAssociationDataList,

    /**
     * The PassengerDataTypePassengerBiometricsData model constructor.
     * @property {module:model/PassengerDataTypePassengerBiometricsData}
     */
    PassengerDataTypePassengerBiometricsData,

    /**
     * The PassengerDataTypePassengerMRZData model constructor.
     * @property {module:model/PassengerDataTypePassengerMRZData}
     */
    PassengerDataTypePassengerMRZData,

    /**
     * The PassengerIDType model constructor.
     * @property {module:model/PassengerIDType}
     */
    PassengerIDType,

    /**
     * The PassengerSessionID model constructor.
     * @property {module:model/PassengerSessionID}
     */
    PassengerSessionID,

    /**
     * The PlatformData model constructor.
     * @property {module:model/PlatformData}
     */
    PlatformData,

    /**
     * The PlatformDataMeta model constructor.
     * @property {module:model/PlatformDataMeta}
     */
    PlatformDataMeta,

    /**
     * The PlatformDataMetaEventClassification model constructor.
     * @property {module:model/PlatformDataMetaEventClassification}
     */
    PlatformDataMetaEventClassification,

    /**
     * The PlatformDataPayload model constructor.
     * @property {module:model/PlatformDataPayload}
     */
    PlatformDataPayload,

    /**
     * The PlatformDirectives model constructor.
     * @property {module:model/PlatformDirectives}
     */
    PlatformDirectives,

    /**
     * The RFIDElement model constructor.
     * @property {module:model/RFIDElement}
     */
    RFIDElement,

    /**
     * The RFIDTagDataType model constructor.
     * @property {module:model/RFIDTagDataType}
     */
    RFIDTagDataType,

    /**
     * The ReceiptData model constructor.
     * @property {module:model/ReceiptData}
     */
    ReceiptData,

    /**
     * The RequestID model constructor.
     * @property {module:model/RequestID}
     */
    RequestID,

    /**
     * The RgbType model constructor.
     * @property {module:model/RgbType}
     */
    RgbType,

    /**
     * The ScreenResolution model constructor.
     * @property {module:model/ScreenResolution}
     */
    ScreenResolution,

    /**
     * The MessageCodes model constructor.
     * @property {module:model/MessageCodes}
     */
    MessageCodes,

    /**
     * The TransactionDocumentType model constructor.
     * @property {module:model/TransactionDocumentType}
     */
    TransactionDocumentType,

    /**
     * The TransactionReference model constructor.
     * @property {module:model/TransactionReference}
     */
    TransactionReference,

    /**
     * The TransactionStatus model constructor.
     * @property {module:model/TransactionStatus}
     */
    TransactionStatus,

    /**
     * The WeightType model constructor.
     * @property {module:model/WeightType}
     */
    WeightType,

    /**
    * The CodeStubsGenerationApi service constructor.
    * @property {module:api/CodeStubsGenerationApi}
    */
    CodeStubsGenerationApi,

    /**
    * The PlatformCommunicationApi service constructor.
    * @property {module:api/PlatformCommunicationApi}
    */
    PlatformCommunicationApi
};
